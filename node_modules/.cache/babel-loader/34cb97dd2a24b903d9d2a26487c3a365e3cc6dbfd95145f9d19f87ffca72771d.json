{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\coding\\\\7solutions interview\\\\My-Test-repo\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialItems = [{\n  type: \"Fruit\",\n  name: \"Apple\"\n}, {\n  type: \"Vegetable\",\n  name: \"Broccoli\"\n}, {\n  type: \"Vegetable\",\n  name: \"Mushroom\"\n}, {\n  type: \"Fruit\",\n  name: \"Banana\"\n}, {\n  type: \"Vegetable\",\n  name: \"Tomato\"\n}, {\n  type: \"Fruit\",\n  name: \"Orange\"\n}, {\n  type: \"Fruit\",\n  name: \"Mango\"\n}, {\n  type: \"Fruit\",\n  name: \"Pineapple\"\n}, {\n  type: \"Vegetable\",\n  name: \"Cucumber\"\n}, {\n  type: \"Fruit\",\n  name: \"Watermelon\"\n}, {\n  type: \"Vegetable\",\n  name: \"Carrot\"\n}];\nconst App = () => {\n  _s();\n  const [items, setItems] = useState(initialItems);\n  const [columns, setColumns] = useState([{\n    type: \"Fruit\",\n    items: []\n  }, {\n    type: \"Vegetable\",\n    items: []\n  }]);\n  const moveToColumn = item => {\n    setColumns(prevColumns => {\n      const newColumns = prevColumns.map(column => {\n        if (column.type === item.type) {\n          return {\n            ...column,\n            items: [...column.items, item]\n          };\n        }\n        return column;\n      });\n      return newColumns;\n    });\n    setItems(prevItems => prevItems.filter(i => i.name !== item.name));\n\n    // Set timeout to move item back after 5 seconds\n    setTimeout(() => {\n      setColumns(prevColumns => {\n        const newColumns = prevColumns.map(column => {\n          if (column.type === item.type) {\n            return {\n              ...column,\n              items: column.items.filter(i => i.name !== item.name)\n            };\n          }\n          return column;\n        });\n        return newColumns;\n      });\n      setItems(prevItems => [...prevItems, item]);\n    }, 5000);\n  };\n  const returnToMainList = item => {\n    setColumns(prevColumns => {\n      const newColumns = prevColumns.map(column => {\n        if (column.type === item.type) {\n          return {\n            ...column,\n            items: column.items.filter(i => i.name !== item.name)\n          };\n        }\n        return column;\n      });\n      return newColumns;\n    });\n    setItems(prevItems => [...prevItems, item]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Main List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), items.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"item-button\",\n        onClick: () => moveToColumn(item),\n        children: item.name\n      }, item.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: columns.map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [column.type, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), column.items.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"item-button\",\n          onClick: () => returnToMainList(item),\n          children: item.name\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this))]\n      }, column.type, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"y+xiWY2OStz5wq+ikepIfj7taYM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialItems","type","name","App","_s","items","setItems","columns","setColumns","moveToColumn","item","prevColumns","newColumns","map","column","prevItems","filter","i","setTimeout","returnToMainList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/coding/7solutions interview/My-Test-repo/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { FoodItem, FoodColumn } from \"./types\";\r\nimport \"./App.css\";\r\n\r\nconst initialItems: FoodItem[] = [\r\n  { type: \"Fruit\", name: \"Apple\" },\r\n  { type: \"Vegetable\", name: \"Broccoli\" },\r\n  { type: \"Vegetable\", name: \"Mushroom\" },\r\n  { type: \"Fruit\", name: \"Banana\" },\r\n  { type: \"Vegetable\", name: \"Tomato\" },\r\n  { type: \"Fruit\", name: \"Orange\" },\r\n  { type: \"Fruit\", name: \"Mango\" },\r\n  { type: \"Fruit\", name: \"Pineapple\" },\r\n  { type: \"Vegetable\", name: \"Cucumber\" },\r\n  { type: \"Fruit\", name: \"Watermelon\" },\r\n  { type: \"Vegetable\", name: \"Carrot\" },\r\n];\r\n\r\nconst App: React.FC = () => {\r\n  const [items, setItems] = useState<FoodItem[]>(initialItems);\r\n  const [columns, setColumns] = useState<FoodColumn[]>([\r\n    { type: \"Fruit\", items: [] },\r\n    { type: \"Vegetable\", items: [] },\r\n  ]);\r\n\r\n  const moveToColumn = (item: FoodItem) => {\r\n    setColumns((prevColumns) => {\r\n      const newColumns = prevColumns.map((column) => {\r\n        if (column.type === item.type) {\r\n          return {\r\n            ...column,\r\n            items: [...column.items, item],\r\n          };\r\n        }\r\n        return column;\r\n      });\r\n      return newColumns;\r\n    });\r\n\r\n    setItems((prevItems) => prevItems.filter((i) => i.name !== item.name));\r\n\r\n    // Set timeout to move item back after 5 seconds\r\n    setTimeout(() => {\r\n      setColumns((prevColumns) => {\r\n        const newColumns = prevColumns.map((column) => {\r\n          if (column.type === item.type) {\r\n            return {\r\n              ...column,\r\n              items: column.items.filter((i) => i.name !== item.name),\r\n            };\r\n          }\r\n          return column;\r\n        });\r\n        return newColumns;\r\n      });\r\n\r\n      setItems((prevItems) => [...prevItems, item]);\r\n    }, 5000);\r\n  };\r\n\r\n  const returnToMainList = (item: FoodItem) => {\r\n    setColumns((prevColumns) => {\r\n      const newColumns = prevColumns.map((column) => {\r\n        if (column.type === item.type) {\r\n          return {\r\n            ...column,\r\n            items: column.items.filter((i) => i.name !== item.name),\r\n          };\r\n        }\r\n        return column;\r\n      });\r\n      return newColumns;\r\n    });\r\n\r\n    setItems((prevItems) => [...prevItems, item]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"main-list\">\r\n        <h2>Main List</h2>\r\n        {items.map((item) => (\r\n          <button\r\n            key={item.name}\r\n            className=\"item-button\"\r\n            onClick={() => moveToColumn(item)}\r\n          >\r\n            {item.name}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"columns\">\r\n        {columns.map((column) => (\r\n          <div key={column.type} className=\"column\">\r\n            <h2>{column.type}s</h2>\r\n            {column.items.map((item) => (\r\n              <button\r\n                key={item.name}\r\n                className=\"item-button\"\r\n                onClick={() => returnToMainList(item)}\r\n              >\r\n                {item.name}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}